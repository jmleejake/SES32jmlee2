<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 스케줄러 정보 처리 SQL -->
<mapper namespace="global.sesoc.project2.msm.calendar.mapper.ICalendarMapper">
	<!-- 월단위 일정목록 얻기 -->
	<select id="selectSchedules" resultType="Calendar" parameterType="map">
		<![CDATA[
		SELECT
			 id 
			 , text 
			 , TO_CHAR(start_date, 'yyyy-mm-dd hh24:mi') start_date 
			 , TO_CHAR(end_date, 'yyyy-mm-dd hh24:mi') end_date
			 , content
			 , alarm_yn
			 , alarm_val
			 , is_dbdata
			 , repeat_type
			 , TO_CHAR(repeat_end_date, 'yyyy-mm-dd') repeat_end_date
			 , color
			 , c_target
			 , t_id
		 FROM msm_calendar
		 WHERE repeat_type != 'none'
		 AND u_id = #{u_id}
		 UNION
		 SELECT
			 id 
			 , text 
			 , TO_CHAR(start_date, 'yyyy-mm-dd hh24:mi') start_date 
			 , TO_CHAR(end_date, 'yyyy-mm-dd hh24:mi') end_date
			 , content
		  	 , alarm_yn
		  	 , alarm_val
		  	 , is_dbdata
		  	 , repeat_type
		  	 , TO_CHAR(repeat_end_date, 'yyyy-mm-dd') repeat_end_date
		  	 , color
		  	 , c_target
			 , t_id
		 FROM msm_calendar
		 WHERE start_date >= ADD_MONTHS(TO_DATE(#{date}, 'yyyy-mm-dd'), -6)
		 AND end_date <= ADD_MONTHS(LAST_DAY(TO_DATE(#{date}, 'yyyy-mm-dd')) +6, 1)
		 AND  repeat_type = 'none'
		 AND u_id = #{u_id}
		 ]]>
	</select>
	
	<!-- 아이디에 해당하는 이벤트 존재여부 구하기 (수정/등록 분기처리시 사용) -->
	<select id="selectSchedule" resultType="Calendar" parameterType="map">
		  SELECT 
			  id 
			  , text 
			  , TO_CHAR(start_date, 'DY MON DD YYYY HH24:MI:SS','NLS_DATE_LANGUAGE = American') start_date 
			  , TO_CHAR(end_date, 'DY MON DD YYYY HH24:MI:SS','NLS_DATE_LANGUAGE = American') end_date
			  , content
	  		  , alarm_yn
	  		  , alarm_val
	  		  , repeat_type
			  , TO_CHAR(repeat_end_date, 'yyyy-mm-dd') repeat_end_date
			  , is_dbdata
			  , color
			  , c_target
			  , t_id
		  FROM msm_calendar
		  WHERE id = #{id}
		  AND u_id = #{u_id}
	</select>
	
	<!-- 일정 등록 -->
	<insert id="insertSchedule" parameterType="Calendar">
		INSERT INTO 
			msm_calendar 
				(
					id
					, u_id
					, text
					, start_date
					, end_date
					, content
					<if test="c_location != null and !c_location != ''">
					, c_location
					</if>
					<if test="!alarm_val.equals('none')">
					, alarm_yn
					, alarm_val
					</if>
					, repeat_type
					<if test="repeat_end_date != null and repeat_end_date != ''">
					, repeat_end_date
					</if>
					, is_dbdata
					, color
					<if test="c_target != null and c_target != ''">
					, c_target
			 		, t_id
			 		</if>
				)
		VALUES 
				(
					SEQ_MSM_CALENDAR.NEXTVAL
					, #{u_id}
					, #{text}
					<choose>
						<when test="in_type =='sch'">
						, TO_DATE(SUBSTR(#{start_date},1,24), 'DY MON DD YYYY HH24:MI:SS','NLS_DATE_LANGUAGE = American')
						, TO_DATE(SUBSTR(#{end_date},1,24), 'DY MON DD YYYY HH24:MI:SS','NLS_DATE_LANGUAGE = American')
						</when>
						<otherwise>
						, TO_DATE(#{start_date}, 'yyyy-mm-dd hh24:mi')
						, TO_DATE(#{end_date}, 'yyyy-mm-dd hh24:mi')
						</otherwise>
					</choose>
					
					, #{content}
					<if test="c_location != null and !c_location != ''">
					, #{c_location}
					</if>
					<if test="!alarm_val.equals('none')">
					, 'T'
					, #{alarm_val}
					</if>
					, #{repeat_type}
					<if test="repeat_end_date != null  and repeat_end_date != ''">
					, TO_DATE(#{repeat_end_date} || ' 00:00:00', 'YYYY-MM-DD hh24:mi:ss') + 1
					</if>
					, 'T'
					, #{color}
					<if test="c_target != null and c_target != ''">
					, #{c_target} 
			 		, #{t_id}
			 		</if>
				)
	</insert>
	
	<!-- 일정 삭제 -->
	<delete id="deleteSchedule" parameterType="string">
		DELETE FROM msm_calendar 
		WHERE id = #{id}
	</delete>
	
	<!-- 일정 수정 -->
	<update id="updateSchedule" parameterType="Calendar">
		UPDATE msm_calendar
		SET
			text = #{text}
			, content = #{content}
			, start_date = TO_DATE(SUBSTR(#{start_date},1,24), 'DY MON DD YYYY HH24:MI:SS','NLS_DATE_LANGUAGE = American')
			, end_date = TO_DATE(SUBSTR(#{end_date},1,24), 'DY MON DD YYYY HH24:MI:SS','NLS_DATE_LANGUAGE = American')
			<choose>
				<when test="!alarm_val.equals('none')">
				, alarm_yn = 'T'
				, alarm_val = #{alarm_val}
				</when>
				<when test="alarm_val.equals('none')">
				, alarm_yn = 'F'
				, alarm_val = null
				</when>
			</choose>
			, repeat_type = #{repeat_type}
			<if test="repeat_end_date != null and repeat_end_date != ''">
			, repeat_end_date = TO_DATE(#{repeat_end_date} || ' 00:00:00', 'YYYY-MM-DD hh24:mi:ss')
			</if>
			, color = #{color}
			<if test="c_target != null and c_target != ''">
			, c_target = #{c_target}
	 		, t_id = #{t_id}
	 		</if>
		WHERE
			id = #{id}
	</update>
	
	<!-- 최신 글 번호 구하기 -->
	<select id="selectLatestEventNum" resultType="string">
		SELECT id
		FROM msm_calendar
		WHERE rownum = 1
		ORDER BY id DESC
	</select>
	
	<!-- 알림시간 얻기 -->
	<select id="selectAlarmTime" parameterType="string" resultType="string">
		SELECT TO_CHAR (start_date - alarm_val/(24*60), 'ss mi hh24 dd mm ? yyyy') alarm_time
		FROM msm_calendar
		WHERE alarm_yn = 'T'
			AND id = #{id} 
	</select>
	
	<!-- 한달남은 일정 목록 얻기 (메인화면을 위한) -->
	<select id="selectDdayMonthForMain" resultType="Calendar" parameterType="map">
		<![CDATA[
		SELECT 
			id
			, text
			, TO_CHAR(start_date, 'yyyy-mm-dd') start_date
			, content 
			, color
			, CASE
				WHEN TO_CHAR(start_date - sysdate, '99') > 0
				THEN 'D-'|| TO_CHAR(start_date - sysdate, '99')
				ELSE 'DDAY!!'
				END AS dday
		FROM msm_calendar
		WHERE start_date between sysdate-1 and sysdate + 15
		AND u_id = #{u_id}
		ORDER BY start_date ASC
		]]>
	</select>
	
	<!-- 키워드 검색 (자동완성 구현) -->
	<select id="selectSchedulesForSearch" resultType="Calendar" parameterType="map">
		<![CDATA[
		SELECT
			 id 
			 , text 
			 , TO_CHAR(start_date, 'yyyy-mm-dd') start_date 
			 , TO_CHAR(end_date, 'yyyy-mm-dd') end_date
			 , content
			 , alarm_yn
			 , alarm_val
			 , is_dbdata
			 , repeat_type
			 , TO_CHAR(repeat_end_date, 'yyyy-mm-dd') repeat_end_date
			 , color
			 , c_target
			 , t_id
		 FROM msm_calendar
		 WHERE text LIKE '%' || #{keyword} || '%'
		 AND u_id = #{u_id}
		 AND start_date >= ADD_MONTHS(TO_DATE(#{date}, 'yyyy-mm-dd'), -6)
		 AND end_date <= ADD_MONTHS(LAST_DAY(TO_DATE(#{date}, 'yyyy-mm-dd')) +6, 1)
		 ORDER BY start_date DESC
		 ]]>
	</select>
</mapper>
